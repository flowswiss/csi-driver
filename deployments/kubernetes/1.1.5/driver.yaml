apiVersion: storage.k8s.io/v1
kind: CSIDriver
metadata:
  name: csi.flow.swiss
spec:
  attachRequired: true
  volumeLifecycleModes:
    - Persistent
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: flow-block-storage
  annotations:
    storageclass.kubernetes.io/is-default-class: 'true'
provisioner: csi.flow.swiss
allowVolumeExpansion: true
parameters:
  csi.storage.k8s.io/fstype: ext4
---
apiVersion: snapshot.storage.k8s.io/v1beta1
kind: VolumeSnapshotClass
metadata:
  name: flow-block-storage
  annotations:
    snapshot.storage.kubernetes.io/is-default-class: "true"
driver: csi.flow.swiss
deletionPolicy: Delete
---

## CSI Controller

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: csi-controller
  namespace: flow
spec:
  serviceName: flow-csi-controller
  replicas: 1
  selector:
    matchLabels:
      app: csi-controller
  template:
    metadata:
      labels:
        app: csi-controller
    spec:
      priorityClassName: system-cluster-critical
      serviceAccountName: csi-controller
      containers:
        - name: csi-provisioner
          image: k8s.gcr.io/sig-storage/csi-provisioner:v2.2.0
          imagePullPolicy: IfNotPresent
          args:
            - --timeout=30s
            - --csi-address=/csi/csi.sock
            - --leader-election
            - --retry-interval-max=8h
            - --v=5
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-attacher
          image: k8s.gcr.io/sig-storage/csi-attacher:v3.1.0
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=/csi/csi.sock
            - --leader-election
            - --v=5
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-resizer
          image: k8s.gcr.io/sig-storage/csi-resizer:v1.1.0
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=/csi/csi.sock
            - --leader-election
            - --v=5
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-snapshotter
          image: k8s.gcr.io/sig-storage/csi-snapshotter:v4.2.1
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=/csi/csi.sock
            - --leader-election
            - --v=5
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: liveness-probe
          image: k8s.gcr.io/sig-storage/livenessprobe:v2.3.0
          imagePullPolicy: IfNotPresent
          args:
            - --csi-address=/csi/csi.sock
            - --probe-timeout=10s
            - --v=5
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
        - name: csi-driver
          image: registry.flow.swiss/k8s/csi-driver:v1.1.5
          imagePullPolicy: Always
          args:
            - --base-url=$(FLOW_BASE_URL)
            - --token=$(FLOW_APPLICATION_TOKEN)
            - --hostname=$(KUBE_NODE_NAME)
            - --socket=unix:///csi/csi.sock
            - --v=5
          ports:
            - name: healthz
              containerPort: 9808
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: healthz
            failureThreshold: 3
            initialDelaySeconds: 10
            timeoutSeconds: 10
            periodSeconds: 30
          env:
            - name: FLOW_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: flow
                  key: base
            - name: FLOW_APPLICATION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: flow
                  key: token
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
      volumes:
        - name: socket-dir
          emptyDir: { }
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: csi-controller
  namespace: flow
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-provisioner-runner
rules:
  - apiGroups: [ "" ]
    resources: [ "persistentvolumes" ]
    verbs: [ "get", "list", "watch", "create", "delete" ]
  - apiGroups: [ "" ]
    resources: [ "persistentvolumeclaims" ]
    verbs: [ "get", "list", "watch", "update" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "storageclasses" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "list", "watch", "create", "update", "patch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshots" ]
    verbs: [ "get", "list" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotcontents" ]
    verbs: [ "get", "list" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "csinodes" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "nodes" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "volumeattachments" ]
    verbs: [ "get", "list", "watch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-provisioner-role
subjects:
  - kind: ServiceAccount
    name: csi-controller
    namespace: flow
roleRef:
  kind: ClusterRole
  name: external-provisioner-runner
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-attacher-runner
rules:
  - apiGroups: [ "" ]
    resources: [ "persistentvolumes" ]
    verbs: [ "get", "list", "watch", "patch" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "csinodes" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "volumeattachments" ]
    verbs: [ "get", "list", "watch", "patch" ]
  - apiGroups: [ "storage.k8s.io" ]
    resources: [ "volumeattachments/status" ]
    verbs: [ "patch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-attacher-role
subjects:
  - kind: ServiceAccount
    name: csi-controller
    namespace: flow
roleRef:
  kind: ClusterRole
  name: external-attacher-runner
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-resizer-runner
rules:
  - apiGroups: [ "" ]
    resources: [ "persistentvolumes" ]
    verbs: [ "get", "list", "watch", "patch" ]
  - apiGroups: [ "" ]
    resources: [ "persistentvolumeclaims" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "pods" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources: [ "persistentvolumeclaims/status" ]
    verbs: [ "patch" ]
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "list", "watch", "create", "update", "patch" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-resizer-role
subjects:
  - kind: ServiceAccount
    name: csi-controller
    namespace: flow
roleRef:
  kind: ClusterRole
  name: external-resizer-runner
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: external-snapshotter-runner
rules:
  - apiGroups: [ "" ]
    resources: [ "events" ]
    verbs: [ "list", "watch", "create", "update", "patch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotclasses" ]
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotcontents" ]
    verbs: [ "create", "get", "list", "watch", "update", "delete" ]
  - apiGroups: [ "snapshot.storage.k8s.io" ]
    resources: [ "volumesnapshotcontents/status" ]
    verbs: [ "update" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: csi-snapshotter-role
subjects:
  - kind: ServiceAccount
    name: csi-controller
    namespace: flow
roleRef:
  kind: ClusterRole
  name: external-snapshotter-runner
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: csi-controller-leaderelection
  namespace: flow
rules:
  - apiGroups: [ "coordination.k8s.io" ]
    resources: [ "leases" ]
    verbs: [ "get", "watch", "list", "delete", "update", "create" ]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: csi-controller-leaderelection
  namespace: flow
subjects:
  - kind: ServiceAccount
    name: csi-controller
roleRef:
  kind: Role
  name: csi-controller-leaderelection
  apiGroup: rbac.authorization.k8s.io

---

## CSI Node Driver

kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: csi-node-driver
  namespace: flow
spec:
  selector:
    matchLabels:
      app: csi-node-driver
  template:
    metadata:
      labels:
        app: csi-node-driver
    spec:
      priorityClassName: system-node-critical
      containers:
        - name: driver-registrar
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.0.1
          imagePullPolicy: IfNotPresent
          args:
            - --v=5
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path=/var/lib/kubelet/plugins/csi.flow.swiss/csi.sock
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
        - name: csi-driver
          image: registry.flow.swiss/k8s/csi-driver:latest
          imagePullPolicy: Always
          args:
            - --base-url=$(FLOW_BASE_URL)
            - --token=$(FLOW_APPLICATION_TOKEN)
            - --hostname=$(KUBE_NODE_NAME)
            - --socket=unix:///csi/csi.sock
            - --v=5
          env:
            - name: FLOW_BASE_URL
              valueFrom:
                secretKeyRef:
                  name: flow
                  key: base
            - name: FLOW_APPLICATION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: flow
                  key: token
            - name: KUBE_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          securityContext:
            privileged: true
            capabilities:
              add: [ SYS_ADMIN ]
            allowPrivilegeEscalation: true
          volumeMounts:
            - name: socket-dir
              mountPath: /csi
            - name: mountpoint-dir
              mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
            - name: device-dir
              mountPath: /dev
      volumes:
        - name: registration-dir
          hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: DirectoryOrCreate
        - name: socket-dir
          hostPath:
            path: /var/lib/kubelet/plugins/csi.flow.swiss
            type: DirectoryOrCreate
        - name: mountpoint-dir
          hostPath:
            path: /var/lib/kubelet
            type: Directory
        - name: device-dir
          hostPath:
            path: /dev
